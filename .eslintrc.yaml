parserOptions: { sourceType: module }
env: { browser: true, es2021: true }
rules:
  no-await-in-loop: error
  no-cond-assign: [error, always]
  no-console: error
  no-extra-boolean-cast: [error, { enforceForLogicalOperands: true }]
  no-irregular-whitespace: [error, { skipStrings: false }]
  no-loss-of-precision: error
  no-promise-executor-return: error
  no-template-curly-in-string: error
  no-unreachable-loop: error
  no-unsafe-negation: [error, { enforceForOrderingRelations: true }]
  no-unsafe-optional-chaining: [error, { disallowArithmeticOperators: true }]
  no-useless-backreference: error
  require-atomic-updates: error
  use-isnan: [error, { enforceForIndexOf: true }]
  accessor-pairs: [error, { getWithoutSet: true }]
  array-callback-return: [error, { checkForEach: true }]
  class-methods-use-this: error
  complexity: error
  consistent-return: error
  curly: error
  default-case: error
  default-case-last: error
  default-param-last: error
  dot-notation: error
  eqeqeq: error
  grouped-accessor-pairs: [error, getBeforeSet]
  guard-for-in: error
  max-classes-per-file: error
  no-constructor-return: error
  no-div-regex: error
  no-else-return: [error, { allowElseIf: false }]
  no-empty-function: error
  no-eval: error
  no-extend-native: error
  no-extra-bind: error
  no-implicit-coercion: error
  no-implied-eval: error
  no-invalid-this: [error, { capIsConstructor: false }]
  no-iterator: error
  no-labels: error
  no-lone-blocks: error
  no-magic-numbers: [error, { enforceConst: true, detectObjects: true }]
  no-multi-str: error
  no-new: error
  no-new-func: error
  no-new-wrappers: error
  no-param-reassign: [error, { props: true }]
  no-proto: error
  no-return-assign: [error, always]
  no-return-await: error
  no-script-url: error
  no-self-compare: error
  no-throw-literal: error
  no-unmodified-loop-condition: error
  no-unused-expressions: error
  no-useless-call: error
  no-useless-return: error
  no-void: error
  no-warning-comments: error
  prefer-named-capture-group: error
  prefer-promise-reject-errors: error
  prefer-regex-literals: [error, { disallowRedundantWrapping: true }]
  radix: error
  require-await: error
  require-unicode-regexp: error
  yoda: error
  strict: error
  init-declarations: error
  no-shadow: [error, { builtinGlobals: true, hoist: all }]
  no-undefined: error
  no-unused-vars: [error, { args: all, caughtErrors: all }]
  no-use-before-define: error
  camelcase: error
  capitalized-comments: error
  lines-around-comment:
    [
      error,
      {
        afterBlockComment: true,
        beforeLineComment: true,
        afterLineComment: true,
        allowBlockStart: true,
        allowBlockEnd: true,
        allowObjectStart: true,
        allowObjectEnd: true,
        allowArrayStart: true,
        allowArrayEnd: true,
        allowClassStart: true,
        allowClassEnd: true,
      },
    ]
  lines-between-class-members: error
  max-depth: error
  max-nested-callbacks: error
  max-params: error
  max-statements: error
  multiline-comment-style: error
  new-cap: error
  no-array-constructor: error
  no-bitwise: error
  no-continue: error
  no-inline-comments: error
  no-lonely-if: error
  no-multi-assign: error
  no-negated-condition: error
  no-new-object: error
  no-plusplus: error
  no-tabs: [error, { allowIndentationTabs: true }]
  no-ternary: error
  no-underscore-dangle: error
  one-var: [error, never]
  operator-assignment: error
  prefer-exponentiation-operator: error
  prefer-object-spread: error
  quotes: [error, double, { avoidEscape: true }]
  sort-keys: error
  spaced-comment: error
  arrow-body-style: error
  no-duplicate-imports: [error, { includeExports: true }]
  no-useless-computed-key: [error, { enforceForClassMembers: true }]
  no-useless-constructor: error
  no-useless-rename: error
  no-var: error
  object-shorthand: [error, always, { avoidExplicitReturnArrows: true }]
  prefer-arrow-callback: [error, { allowUnboundThis: false }]
  prefer-const: error
  prefer-destructuring:
    [
      error,
      { array: true, object: true },
      { enforceForRenamedProperties: true },
    ]
  prefer-numeric-literals: error
  prefer-rest-params: error
  prefer-spread: error
  prefer-template: error
  sort-imports: error
  symbol-description: error
reportUnusedDisableDirectives: true
root: true
extends: [eslint:recommended, prettier]
